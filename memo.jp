(*1) 問題設定
(*2) 人出のデータ
(*3) 人出のデータの取得
(*4) 東京都のデータの取得
(*5) 取得したデータの数値への変換
(*6) グラフで表示
(*7) 地図データ

(*1) 問題設定

入力 : 人出のデータ

出力 : 2 週間後の陽性者数等の予測

入力は

https://tokyo.mobakumap.jp/

から取得する. それ以外のより良い方法がればそれでも問題なし.
出力の実際の値は

https://stopcovid19.metro.tokyo.lg.jp/

にある.

(*2) 人出のデータ

時系列の人出. 例えば新宿駅東口周辺のデータは

40000 |
      |
      |  ***
30000 |**   *               **
      |      *             *
      |       *            *
20000 |        *          *
      |         *         *
      |          *       *
10000 |           *     *  
      |            *****
      +------------------------
         15  19  23   3   7  11

のように時間帯に対してグラフで示されている. 地域による特徴はあるがだいたいこのような曲線
になっている.

性年代別のデータも以下のようなヒストグラム与えられている. これはアクセスした時刻の
データに対して示される. 例えば 2021 年 8 月 17 日 11 - 12 時に対して以下のよう
に示される.

         |                   |                   |
70 - 79  |                  *|*                  |
         |                   |                   |
60 - 69  |              *****|***                |
         |                   |                   |
50 - 59  |           ********|*****              |
         |                   |                   |
40 - 49  |       ************|*********          |
         |                   |                   |
30 - 39  |      *************|***********        |
         |                   |                   |
15 - 29  |       ************|***************    |
         |                   |                   |
	 +-------------------+-------------------+
          20%      10%       0%        10%       20%

これも地域による特徴があるが, だいたいこのようになっている.

居住地のデータも与えられている. 円グラフになっている. やはりこれもアクセスした時刻の
データに対して示される.

市区町村内 : 10 %
都道府県内 : 35 %
都道府県外 : 25 %

のようになっている.

(*3) 人出のデータの取得

データを買うことはできそうであるが, そこまではしない. 最初は面倒かもしれないが手で
データを集める. それが面倒なら工夫する.

collect のようなスクリプトを書いてみた. 単純に手で行なうことをそのまま
書いただけである. ここでポイントとなるのは

xwininfo, xdotool, xwd, xwud

という X のコマンドで, 自分でプログラムを書くなら X11 ライブラリを使う
ことになる. この時点での collect を collect.001 としてこのページにアッ
プロードしておいた. 動かすと日本橋駅周辺の人出のグラフの画面ダンプを取っ
てくれて, 一応それを確認するというものである. 最初のバージョンなので
これでよい.

さらに改良して日本橋駅以外のデータも取得できるようにした. 実はこのときマウスを動かして
クリックしてグラフを表示する必要はなく, いきなりグラフを表示することができるらしいことに
気付いてそのようにした. 但し, firefox のタブを閉じる動作ではマウスを動かしてクリック
するということをしている. これを collect2.cpp として実現した. この時点での
ものを collect2.cpp.001 としてアップロードしておく.


(*4) 東京都のデータの取得

東京都のページにアクセスして画面ダンプとスクロールをするスクリプト
tokyo を作成してみた. 色々と問題はあるが最初のバージョンを tyokyo.001
としてアップロードしておく.

(*5) 取得したデータの数値への変換

人出のデータにおける「時系列」のグラフから時刻と人出を取り出すプログラ
ムを tdata.cpp として作成した. この時点での tdata.cpp を tdata.cpp.001
としてアップロードしておく.

また collect2.cpp は画面にデータが揃う前に次のデータを収集しにいくとい
う問題があったので, tdata を動作させ, 1 回リトライするように修正した.
この時点での collect2.cpp を collect2.cpp.002 としてアップロードしておく.

再度修正. -s -e オプションを collect2 に追加した. また性世代や居住地のデータも
取得できるように修正した. この時点での collect2.cpp, tdata.cpp, gdata.cpp, pdata.cpp
を collect2.cpp.003, tdata.cpp.002, gdata.cpp.001, pdata.cpp.001
としてアップロードしておく.

(*6) グラフで表示

現状, ある地点(座標における) unix の時刻の人出が計測できている:

typedef pair<double, double> COORD;

typedef map<int, int> CROWD;

map<COORD, CROWD> data;

現状この data から Yahoo の雨雲レーダー相当のことができないかという問題になっている..

gnuplot で動画ができている:

/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/gnuplot-5.2.6/demo/animate{,2}.dem

にサンプルがある. これは View Point を時間で変更するというものだが
gnuplot で動画ができるらしい.

イメージ的には Yahoo にある雨雲レーダーのようなものを目標にする. アニ
メーションをスライダで動かす. 人の流れが多いところを赤くするなど.

(*7) 地図データ

せっかくなので (*6) のグラフを地図と一緒に表示するべきかと思い, 国土地理院のページから
それっぽいデータをダウンロードした.

https://nlftp.mlit.go.jp/ksj/gml/datalist/KsjTmplt-N03-v3_0.html#prefecture13

にある最新の東京, 神奈川, 千葉, 埼玉のデータをダウンロードした.

% wget https://nlftp.mlit.go.jp/ksj/gml/data/N03/N03-2021/N03-20210101_01_GML.zip

とすれば北海道の地図を取得することができる.


(*) 陽性者数と人出の関係

https://toyokeizai.net/articles/-/448957

少し減らしたくらいでは陽性者は減らないらしい.


各国のデータが以下から入手できるらしい.

https://github.com/CSSEGISandData/COVID-19

% mkdir CSSEGISandData
% cd CSSEGISandData
% mkdir COVID-19
% cd COVID-19
% git init
% git pull https://github.com/CSSEGISandData/COVID-19


(*) 世界地図

https://upload.wikimedia.org/wikipedia/commons/9/9f/BlankMap-World-Equirectangular.svg

SVG というのは XML でこれが一般的な地図データらしい. firefox もサポートしている.

/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/CSSEGISandData/COVID-19/archived_data/archived_time_series/time_series_19-covid-Confirmed_archived_0325.csv

を見ると

2020/01/22 の日本の感染者数が 36.0 だったことが
2020/03/23                1086.0 らしいが      <- Google の結果では 40 人


/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/CSSEGISandData/COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv

によれば 2021/08/31 の日本の感染者数は累計で 1491514 だが


https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv

https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv

/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/CSSEGISandData/COVID-19/csse_covid_19_data/csse_covid_19_time_series/

firefox のウィンドウサイズが異なると tata, gdata, pdata が期待した
動作になっていない.

937x600

だと tdata, pdata は期待した動作になっているが, gdata が期待した動作に
なっていない.

937x629

だと tdata は期待した動作になっているが, ボタンを押せていなくて gdata,
pdata が失敗している.

そもそもボタンの位置は xdotool

937x606 だと tdata, pdata は OK. gdata は NG


999x619 だと tdata, pdata, gdata ともうまくいっている.
